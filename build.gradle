plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.springframework.experimental.aot' version '0.12.1'
	id 'org.hibernate.orm'
}
ext {
	mapstructVersion = "1.5.3.Final"
	javaLanguageLevel = '11'
	generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
}
group = 'com.talentia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	mapstruct
	compileOnly {
		extendsFrom annotationProcessor
	}
}
sourceSets.main {
	ext.originalJavaSrcDirs = java.srcDirs
	java.srcDir "${generatedMapperSourcesDir}"
}
repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}
ext {
	set('springCloudVersion', "2021.0.5")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	// https://mvnrepository.com/artifact/com.auth0/auth0

	implementation group: 'com.auth0', name: 'java-jwt', version: '3.8.3'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'


	implementation("com.h2database:h2:1.4.200")
	compileOnly 'org.projectlombok:lombok'
	//runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

task generateMainMapperClasses(type: JavaCompile) {
	ext.aptDumpDir = file( "${buildDir}/tmp/apt/mapstruct" )
	destinationDir = aptDumpDir

	classpath = compileJava.classpath + configurations.mapstruct
	source = sourceSets.main.originalJavaSrcDirs
	ext.sourceDestDir = file ( "$generatedMapperSourcesDir" )

	options.define(
			compilerArgs: [
					"-nowarn",
					"-proc:only",
					"-encoding", "UTF-8",
					"-processor", "org.mapstruct.ap.MappingProcessor",
					"-s", sourceDestDir.absolutePath,
					"-source", rootProject.javaLanguageLevel,
					"-target", rootProject.javaLanguageLevel,
			]
	);

	inputs.dir source
	outputs.dir generatedMapperSourcesDir;
	doFirst {
		sourceDestDir.mkdirs()
	}
	doLast {
		aptDumpDir.delete()
	}
}
